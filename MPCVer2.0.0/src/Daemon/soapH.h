/* soapH.h
   Generated by gSOAP 2.8.14 from MPCSoapI.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin(soap), soap_serialize_byte(soap, data), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin(soap), soap_serialize_int(soap, data), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);

#ifndef soap_write_long
#define soap_write_long(soap, data) ( soap_begin(soap), soap_serialize_long(soap, data), soap_begin_send(soap) || soap_put_long(soap, data, "long", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);

#ifndef soap_read_long
#define soap_read_long(soap, data) ( soap_begin_recv(soap) || !soap_get_long(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (8)
#endif

#define soap_default_xsd__string(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__string
#define soap_write_xsd__string(soap, data) ( soap_begin(soap), soap_serialize_xsd__string(soap, data), soap_begin_send(soap) || soap_put_xsd__string(soap, data, "xsd:string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__string
#define soap_read_xsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_xsd__string soap_instantiate_std__string


#define soap_copy_xsd__string soap_copy_std__string

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin(soap), soap_serialize_std__string(soap, data), soap_begin_send(soap) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Fault(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Header(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_MPC__typeRequest
#define SOAP_TYPE_MPC__typeRequest (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_MPC__typeRequest(struct soap*, struct MPC__typeRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_MPC__typeRequest(struct soap*, const struct MPC__typeRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_MPC__typeRequest(struct soap*, const char*, int, const struct MPC__typeRequest *, const char*);
SOAP_FMAC3 struct MPC__typeRequest * SOAP_FMAC4 soap_in_MPC__typeRequest(struct soap*, const char*, struct MPC__typeRequest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_MPC__typeRequest(struct soap*, const struct MPC__typeRequest *, const char*, const char*);

#ifndef soap_write_MPC__typeRequest
#define soap_write_MPC__typeRequest(soap, data) ( soap_begin(soap), soap_serialize_MPC__typeRequest(soap, data), soap_begin_send(soap) || soap_put_MPC__typeRequest(soap, data, "MPC:typeRequest", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct MPC__typeRequest * SOAP_FMAC4 soap_get_MPC__typeRequest(struct soap*, struct MPC__typeRequest *, const char*, const char*);

#ifndef soap_read_MPC__typeRequest
#define soap_read_MPC__typeRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_MPC__typeRequest(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct MPC__typeRequest * SOAP_FMAC2 soap_instantiate_MPC__typeRequest(struct soap*, int, const char*, const char*, size_t*);

inline struct MPC__typeRequest * soap_new_MPC__typeRequest(struct soap *soap, int n = -1) { return soap_instantiate_MPC__typeRequest(soap, n, NULL, NULL, NULL); }

inline struct MPC__typeRequest * soap_new_req_MPC__typeRequest(struct soap *soap, long type, long order) { struct MPC__typeRequest *_p = soap_instantiate_MPC__typeRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_MPC__typeRequest(soap, _p); _p->type = type; _p->order = order; } return _p; }

inline struct MPC__typeRequest * soap_new_set_MPC__typeRequest(struct soap *soap, long type, long order) { struct MPC__typeRequest *_p = soap_instantiate_MPC__typeRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_MPC__typeRequest(soap, _p); _p->type = type; _p->order = order; } return _p; }

inline void soap_delete_MPC__typeRequest(struct soap *soap, struct MPC__typeRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_MPC__typeRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_MPC__flashReguest
#define SOAP_TYPE_MPC__flashReguest (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_MPC__flashReguest(struct soap*, struct MPC__flashReguest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_MPC__flashReguest(struct soap*, const struct MPC__flashReguest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_MPC__flashReguest(struct soap*, const char*, int, const struct MPC__flashReguest *, const char*);
SOAP_FMAC3 struct MPC__flashReguest * SOAP_FMAC4 soap_in_MPC__flashReguest(struct soap*, const char*, struct MPC__flashReguest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_MPC__flashReguest(struct soap*, const struct MPC__flashReguest *, const char*, const char*);

#ifndef soap_write_MPC__flashReguest
#define soap_write_MPC__flashReguest(soap, data) ( soap_begin(soap), soap_serialize_MPC__flashReguest(soap, data), soap_begin_send(soap) || soap_put_MPC__flashReguest(soap, data, "MPC:flashReguest", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct MPC__flashReguest * SOAP_FMAC4 soap_get_MPC__flashReguest(struct soap*, struct MPC__flashReguest *, const char*, const char*);

#ifndef soap_read_MPC__flashReguest
#define soap_read_MPC__flashReguest(soap, data) ( soap_begin_recv(soap) || !soap_get_MPC__flashReguest(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct MPC__flashReguest * SOAP_FMAC2 soap_instantiate_MPC__flashReguest(struct soap*, int, const char*, const char*, size_t*);

inline struct MPC__flashReguest * soap_new_MPC__flashReguest(struct soap *soap, int n = -1) { return soap_instantiate_MPC__flashReguest(soap, n, NULL, NULL, NULL); }

inline struct MPC__flashReguest * soap_new_req_MPC__flashReguest(struct soap *soap, long start_input) { struct MPC__flashReguest *_p = soap_instantiate_MPC__flashReguest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_MPC__flashReguest(soap, _p); _p->start_input = start_input; } return _p; }

inline struct MPC__flashReguest * soap_new_set_MPC__flashReguest(struct soap *soap, long start_input, struct _MPC__npRequestResponse *pReq) { struct MPC__flashReguest *_p = soap_instantiate_MPC__flashReguest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_MPC__flashReguest(soap, _p); _p->start_input = start_input; _p->pReq = pReq; } return _p; }

inline void soap_delete_MPC__flashReguest(struct soap *soap, struct MPC__flashReguest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_MPC__flashReguest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_MPC__flashReguestResponse
#define SOAP_TYPE_MPC__flashReguestResponse (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_MPC__flashReguestResponse(struct soap*, struct MPC__flashReguestResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_MPC__flashReguestResponse(struct soap*, const struct MPC__flashReguestResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_MPC__flashReguestResponse(struct soap*, const char*, int, const struct MPC__flashReguestResponse *, const char*);
SOAP_FMAC3 struct MPC__flashReguestResponse * SOAP_FMAC4 soap_in_MPC__flashReguestResponse(struct soap*, const char*, struct MPC__flashReguestResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_MPC__flashReguestResponse(struct soap*, const struct MPC__flashReguestResponse *, const char*, const char*);

#ifndef soap_write_MPC__flashReguestResponse
#define soap_write_MPC__flashReguestResponse(soap, data) ( soap_begin(soap), soap_serialize_MPC__flashReguestResponse(soap, data), soap_begin_send(soap) || soap_put_MPC__flashReguestResponse(soap, data, "MPC:flashReguestResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct MPC__flashReguestResponse * SOAP_FMAC4 soap_get_MPC__flashReguestResponse(struct soap*, struct MPC__flashReguestResponse *, const char*, const char*);

#ifndef soap_read_MPC__flashReguestResponse
#define soap_read_MPC__flashReguestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_MPC__flashReguestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct MPC__flashReguestResponse * SOAP_FMAC2 soap_instantiate_MPC__flashReguestResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct MPC__flashReguestResponse * soap_new_MPC__flashReguestResponse(struct soap *soap, int n = -1) { return soap_instantiate_MPC__flashReguestResponse(soap, n, NULL, NULL, NULL); }

inline struct MPC__flashReguestResponse * soap_new_req_MPC__flashReguestResponse(struct soap *soap, long count) { struct MPC__flashReguestResponse *_p = soap_instantiate_MPC__flashReguestResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_MPC__flashReguestResponse(soap, _p); _p->count = count; } return _p; }

inline struct MPC__flashReguestResponse * soap_new_set_MPC__flashReguestResponse(struct soap *soap, long count) { struct MPC__flashReguestResponse *_p = soap_instantiate_MPC__flashReguestResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_MPC__flashReguestResponse(soap, _p); _p->count = count; } return _p; }

inline void soap_delete_MPC__flashReguestResponse(struct soap *soap, struct MPC__flashReguestResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_MPC__flashReguestResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_MPC__npRequest
#define SOAP_TYPE_MPC__npRequest (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_MPC__npRequest(struct soap*, struct MPC__npRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_MPC__npRequest(struct soap*, const struct MPC__npRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_MPC__npRequest(struct soap*, const char*, int, const struct MPC__npRequest *, const char*);
SOAP_FMAC3 struct MPC__npRequest * SOAP_FMAC4 soap_in_MPC__npRequest(struct soap*, const char*, struct MPC__npRequest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_MPC__npRequest(struct soap*, const struct MPC__npRequest *, const char*, const char*);

#ifndef soap_write_MPC__npRequest
#define soap_write_MPC__npRequest(soap, data) ( soap_begin(soap), soap_serialize_MPC__npRequest(soap, data), soap_begin_send(soap) || soap_put_MPC__npRequest(soap, data, "MPC:npRequest", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct MPC__npRequest * SOAP_FMAC4 soap_get_MPC__npRequest(struct soap*, struct MPC__npRequest *, const char*, const char*);

#ifndef soap_read_MPC__npRequest
#define soap_read_MPC__npRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_MPC__npRequest(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct MPC__npRequest * SOAP_FMAC2 soap_instantiate_MPC__npRequest(struct soap*, int, const char*, const char*, size_t*);

inline struct MPC__npRequest * soap_new_MPC__npRequest(struct soap *soap, int n = -1) { return soap_instantiate_MPC__npRequest(soap, n, NULL, NULL, NULL); }

inline struct MPC__npRequest * soap_new_req_MPC__npRequest(struct soap *soap, struct _MPC__npRequestRequest& r_input) { struct MPC__npRequest *_p = soap_instantiate_MPC__npRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_MPC__npRequest(soap, _p); _p->r_input = r_input; } return _p; }

inline struct MPC__npRequest * soap_new_set_MPC__npRequest(struct soap *soap, struct _MPC__npRequestRequest& r_input) { struct MPC__npRequest *_p = soap_instantiate_MPC__npRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_MPC__npRequest(soap, _p); _p->r_input = r_input; } return _p; }

inline void soap_delete_MPC__npRequest(struct soap *soap, struct MPC__npRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_MPC__npRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_MPC__npRequestResponse
#define SOAP_TYPE_MPC__npRequestResponse (14)
#endif

#define soap_default_MPC__npRequestResponse(soap, a) soap_default__MPC__npRequestResponse(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_MPC__npRequestResponse(struct soap*, const struct _MPC__npRequestResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_MPC__npRequestResponse(struct soap*, const char*, int, const struct _MPC__npRequestResponse *, const char*);
SOAP_FMAC3 struct _MPC__npRequestResponse * SOAP_FMAC4 soap_in_MPC__npRequestResponse(struct soap*, const char*, struct _MPC__npRequestResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_MPC__npRequestResponse(struct soap*, const struct _MPC__npRequestResponse *, const char*, const char*);

#ifndef soap_write_MPC__npRequestResponse
#define soap_write_MPC__npRequestResponse(soap, data) ( soap_begin(soap), soap_serialize_MPC__npRequestResponse(soap, data), soap_begin_send(soap) || soap_put_MPC__npRequestResponse(soap, data, "MPC:npRequestResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _MPC__npRequestResponse * SOAP_FMAC4 soap_get_MPC__npRequestResponse(struct soap*, struct _MPC__npRequestResponse *, const char*, const char*);

#ifndef soap_read_MPC__npRequestResponse
#define soap_read_MPC__npRequestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_MPC__npRequestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_MPC__npRequestResponse soap_instantiate__MPC__npRequestResponse


#define soap_copy_MPC__npRequestResponse soap_copy__MPC__npRequestResponse

#ifndef SOAP_TYPE__MPC__npRequestResponse
#define SOAP_TYPE__MPC__npRequestResponse (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__MPC__npRequestResponse(struct soap*, struct _MPC__npRequestResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__MPC__npRequestResponse(struct soap*, const struct _MPC__npRequestResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__MPC__npRequestResponse(struct soap*, const char*, int, const struct _MPC__npRequestResponse *, const char*);
SOAP_FMAC3 struct _MPC__npRequestResponse * SOAP_FMAC4 soap_in__MPC__npRequestResponse(struct soap*, const char*, struct _MPC__npRequestResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__MPC__npRequestResponse(struct soap*, const struct _MPC__npRequestResponse *, const char*, const char*);

#ifndef soap_write__MPC__npRequestResponse
#define soap_write__MPC__npRequestResponse(soap, data) ( soap_begin(soap), soap_serialize__MPC__npRequestResponse(soap, data), soap_begin_send(soap) || soap_put__MPC__npRequestResponse(soap, data, "MPC:npRequestResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _MPC__npRequestResponse * SOAP_FMAC4 soap_get__MPC__npRequestResponse(struct soap*, struct _MPC__npRequestResponse *, const char*, const char*);

#ifndef soap_read__MPC__npRequestResponse
#define soap_read__MPC__npRequestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__MPC__npRequestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _MPC__npRequestResponse * SOAP_FMAC2 soap_instantiate__MPC__npRequestResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct _MPC__npRequestResponse * soap_new__MPC__npRequestResponse(struct soap *soap, int n = -1) { return soap_instantiate__MPC__npRequestResponse(soap, n, NULL, NULL, NULL); }

inline struct _MPC__npRequestResponse * soap_new_req__MPC__npRequestResponse(struct soap *soap, std::string& Appid, std::string& DisplayName, std::string& Detailtext, std::string& Mark, std::string& Type, std::string& ServerVersion, std::string& ResetServerVerSion, std::string& OrderNumber, std::string& AllDownload, std::string& FewDownload) { struct _MPC__npRequestResponse *_p = soap_instantiate__MPC__npRequestResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__MPC__npRequestResponse(soap, _p); _p->Appid = Appid; _p->DisplayName = DisplayName; _p->Detailtext = Detailtext; _p->Mark = Mark; _p->Type = Type; _p->ServerVersion = ServerVersion; _p->ResetServerVerSion = ResetServerVerSion; _p->OrderNumber = OrderNumber; _p->AllDownload = AllDownload; _p->FewDownload = FewDownload; } return _p; }

inline struct _MPC__npRequestResponse * soap_new_set__MPC__npRequestResponse(struct soap *soap, std::string& Appid, std::string& DisplayName, std::string& Detailtext, std::string& Mark, std::string& Type, std::string& ServerVersion, std::string& ResetServerVerSion, std::string& OrderNumber, std::string& AllDownload, std::string& FewDownload) { struct _MPC__npRequestResponse *_p = soap_instantiate__MPC__npRequestResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__MPC__npRequestResponse(soap, _p); _p->Appid = Appid; _p->DisplayName = DisplayName; _p->Detailtext = Detailtext; _p->Mark = Mark; _p->Type = Type; _p->ServerVersion = ServerVersion; _p->ResetServerVerSion = ResetServerVerSion; _p->OrderNumber = OrderNumber; _p->AllDownload = AllDownload; _p->FewDownload = FewDownload; } return _p; }

inline void soap_delete__MPC__npRequestResponse(struct soap *soap, struct _MPC__npRequestResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__MPC__npRequestResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_MPC__npRequestRequest
#define SOAP_TYPE_MPC__npRequestRequest (10)
#endif

#define soap_default_MPC__npRequestRequest(soap, a) soap_default__MPC__npRequestRequest(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_MPC__npRequestRequest(struct soap*, const struct _MPC__npRequestRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_MPC__npRequestRequest(struct soap*, const char*, int, const struct _MPC__npRequestRequest *, const char*);
SOAP_FMAC3 struct _MPC__npRequestRequest * SOAP_FMAC4 soap_in_MPC__npRequestRequest(struct soap*, const char*, struct _MPC__npRequestRequest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_MPC__npRequestRequest(struct soap*, const struct _MPC__npRequestRequest *, const char*, const char*);

#ifndef soap_write_MPC__npRequestRequest
#define soap_write_MPC__npRequestRequest(soap, data) ( soap_begin(soap), soap_serialize_MPC__npRequestRequest(soap, data), soap_begin_send(soap) || soap_put_MPC__npRequestRequest(soap, data, "MPC:npRequestRequest", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _MPC__npRequestRequest * SOAP_FMAC4 soap_get_MPC__npRequestRequest(struct soap*, struct _MPC__npRequestRequest *, const char*, const char*);

#ifndef soap_read_MPC__npRequestRequest
#define soap_read_MPC__npRequestRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_MPC__npRequestRequest(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_MPC__npRequestRequest soap_instantiate__MPC__npRequestRequest


#define soap_copy_MPC__npRequestRequest soap_copy__MPC__npRequestRequest

#ifndef SOAP_TYPE__MPC__npRequestRequest
#define SOAP_TYPE__MPC__npRequestRequest (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__MPC__npRequestRequest(struct soap*, struct _MPC__npRequestRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__MPC__npRequestRequest(struct soap*, const struct _MPC__npRequestRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__MPC__npRequestRequest(struct soap*, const char*, int, const struct _MPC__npRequestRequest *, const char*);
SOAP_FMAC3 struct _MPC__npRequestRequest * SOAP_FMAC4 soap_in__MPC__npRequestRequest(struct soap*, const char*, struct _MPC__npRequestRequest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__MPC__npRequestRequest(struct soap*, const struct _MPC__npRequestRequest *, const char*, const char*);

#ifndef soap_write__MPC__npRequestRequest
#define soap_write__MPC__npRequestRequest(soap, data) ( soap_begin(soap), soap_serialize__MPC__npRequestRequest(soap, data), soap_begin_send(soap) || soap_put__MPC__npRequestRequest(soap, data, "MPC:npRequestRequest", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _MPC__npRequestRequest * SOAP_FMAC4 soap_get__MPC__npRequestRequest(struct soap*, struct _MPC__npRequestRequest *, const char*, const char*);

#ifndef soap_read__MPC__npRequestRequest
#define soap_read__MPC__npRequestRequest(soap, data) ( soap_begin_recv(soap) || !soap_get__MPC__npRequestRequest(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct _MPC__npRequestRequest * SOAP_FMAC2 soap_instantiate__MPC__npRequestRequest(struct soap*, int, const char*, const char*, size_t*);

inline struct _MPC__npRequestRequest * soap_new__MPC__npRequestRequest(struct soap *soap, int n = -1) { return soap_instantiate__MPC__npRequestRequest(soap, n, NULL, NULL, NULL); }

inline struct _MPC__npRequestRequest * soap_new_req__MPC__npRequestRequest(struct soap *soap, std::string& DisplayName, std::string& DisplayVersion, std::string& URLInfoAbout, std::string& Publisher) { struct _MPC__npRequestRequest *_p = soap_instantiate__MPC__npRequestRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__MPC__npRequestRequest(soap, _p); _p->DisplayName = DisplayName; _p->DisplayVersion = DisplayVersion; _p->URLInfoAbout = URLInfoAbout; _p->Publisher = Publisher; } return _p; }

inline struct _MPC__npRequestRequest * soap_new_set__MPC__npRequestRequest(struct soap *soap, std::string& DisplayName, std::string& DisplayVersion, std::string& URLInfoAbout, std::string& Publisher) { struct _MPC__npRequestRequest *_p = soap_instantiate__MPC__npRequestRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__MPC__npRequestRequest(soap, _p); _p->DisplayName = DisplayName; _p->DisplayVersion = DisplayVersion; _p->URLInfoAbout = URLInfoAbout; _p->Publisher = Publisher; } return _p; }

inline void soap_delete__MPC__npRequestRequest(struct soap *soap, struct _MPC__npRequestRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__MPC__npRequestRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef SOAP_TYPE_PMPC__npRequestResponse
#define SOAP_TYPE_PMPC__npRequestResponse (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PMPC__npRequestResponse(struct soap*, struct _MPC__npRequestResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PMPC__npRequestResponse(struct soap*, const char *, int, struct _MPC__npRequestResponse *const*, const char *);
SOAP_FMAC3 struct _MPC__npRequestResponse ** SOAP_FMAC4 soap_in_PMPC__npRequestResponse(struct soap*, const char*, struct _MPC__npRequestResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PMPC__npRequestResponse(struct soap*, struct _MPC__npRequestResponse *const*, const char*, const char*);

#ifndef soap_write_PMPC__npRequestResponse
#define soap_write_PMPC__npRequestResponse(soap, data) ( soap_begin(soap), soap_serialize_PMPC__npRequestResponse(soap, data), soap_begin_send(soap) || soap_put_PMPC__npRequestResponse(soap, data, "MPC:npRequestResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _MPC__npRequestResponse ** SOAP_FMAC4 soap_get_PMPC__npRequestResponse(struct soap*, struct _MPC__npRequestResponse **, const char*, const char*);

#ifndef soap_read_PMPC__npRequestResponse
#define soap_read_PMPC__npRequestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PMPC__npRequestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_MPC__npRequestResponse
#define SOAP_TYPE_PointerTo_MPC__npRequestResponse (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_MPC__npRequestResponse(struct soap*, struct _MPC__npRequestResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_MPC__npRequestResponse(struct soap*, const char *, int, struct _MPC__npRequestResponse *const*, const char *);
SOAP_FMAC3 struct _MPC__npRequestResponse ** SOAP_FMAC4 soap_in_PointerTo_MPC__npRequestResponse(struct soap*, const char*, struct _MPC__npRequestResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_MPC__npRequestResponse(struct soap*, struct _MPC__npRequestResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_MPC__npRequestResponse
#define soap_write_PointerTo_MPC__npRequestResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_MPC__npRequestResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_MPC__npRequestResponse(soap, data, "MPC:npRequestResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _MPC__npRequestResponse ** SOAP_FMAC4 soap_get_PointerTo_MPC__npRequestResponse(struct soap*, struct _MPC__npRequestResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_MPC__npRequestResponse
#define soap_read_PointerTo_MPC__npRequestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_MPC__npRequestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PMPC__npRequestRequest
#define SOAP_TYPE_PMPC__npRequestRequest (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PMPC__npRequestRequest(struct soap*, struct _MPC__npRequestRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PMPC__npRequestRequest(struct soap*, const char *, int, struct _MPC__npRequestRequest *const*, const char *);
SOAP_FMAC3 struct _MPC__npRequestRequest ** SOAP_FMAC4 soap_in_PMPC__npRequestRequest(struct soap*, const char*, struct _MPC__npRequestRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PMPC__npRequestRequest(struct soap*, struct _MPC__npRequestRequest *const*, const char*, const char*);

#ifndef soap_write_PMPC__npRequestRequest
#define soap_write_PMPC__npRequestRequest(soap, data) ( soap_begin(soap), soap_serialize_PMPC__npRequestRequest(soap, data), soap_begin_send(soap) || soap_put_PMPC__npRequestRequest(soap, data, "MPC:npRequestRequest", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _MPC__npRequestRequest ** SOAP_FMAC4 soap_get_PMPC__npRequestRequest(struct soap*, struct _MPC__npRequestRequest **, const char*, const char*);

#ifndef soap_read_PMPC__npRequestRequest
#define soap_read_PMPC__npRequestRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PMPC__npRequestRequest(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_MPC__npRequestRequest
#define SOAP_TYPE_PointerTo_MPC__npRequestRequest (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_MPC__npRequestRequest(struct soap*, struct _MPC__npRequestRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_MPC__npRequestRequest(struct soap*, const char *, int, struct _MPC__npRequestRequest *const*, const char *);
SOAP_FMAC3 struct _MPC__npRequestRequest ** SOAP_FMAC4 soap_in_PointerTo_MPC__npRequestRequest(struct soap*, const char*, struct _MPC__npRequestRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_MPC__npRequestRequest(struct soap*, struct _MPC__npRequestRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTo_MPC__npRequestRequest
#define soap_write_PointerTo_MPC__npRequestRequest(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_MPC__npRequestRequest(soap, data), soap_begin_send(soap) || soap_put_PointerTo_MPC__npRequestRequest(soap, data, "MPC:npRequestRequest", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct _MPC__npRequestRequest ** SOAP_FMAC4 soap_get_PointerTo_MPC__npRequestRequest(struct soap*, struct _MPC__npRequestRequest **, const char*, const char*);

#ifndef soap_read_PointerTo_MPC__npRequestRequest
#define soap_read_PointerTo_MPC__npRequestRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_MPC__npRequestRequest(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin(soap), soap_serialize__QName(soap, data), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin(soap), soap_serialize_string(soap, data), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

/* End of soapH.h */
