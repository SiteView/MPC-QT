/* soapStub.h
   Generated by gSOAP 2.8.15 from MPCSoapI.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#ifndef _C_SOASERVICE_INTERFACE_
#define _C_SOASERVICE_INTERFACE_
#endif
#include "stdsoap2.h"
#if GSOAP_VERSION != 20815
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__MPC__npRequestRequest
#define SOAP_TYPE__MPC__npRequestRequest (9)
/* MPC:npRequestRequest */
struct _MPC__npRequestRequest
{
public:
	std::string AppID;	/* required element of type xsd:string */
	std::string DisplayName;	/* required element of type xsd:string */
	std::string ResetServerVersion;	/* required element of type xsd:string */
	std::string URLInfoAbout;	/* required element of type xsd:string */
	std::string Publisher;	/* required element of type xsd:string */
public:
	int soap_type() const { return 9; } /* = unique id SOAP_TYPE__MPC__npRequestRequest */
};
#endif

#ifndef SOAP_TYPE__MPC__npRequestResponse
#define SOAP_TYPE__MPC__npRequestResponse (13)
/* MPC:npRequestResponse */
struct _MPC__npRequestResponse
{
public:
	std::string AppID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
	std::string AppName;	/* required element of type xsd:string */
	std::string DisplayName;	/* required element of type xsd:string */
	std::string Detailtext;	/* required element of type xsd:string */
	std::string Mark;	/* required element of type xsd:string */
	std::string Type;	/* required element of type xsd:string */
	std::string ServerVersion;	/* required element of type xsd:string */
	std::string ResetServerVersion;	/* required element of type xsd:string */
	std::string Size;	/* required element of type xsd:string */
	std::string OrderNumber;	/* required element of type xsd:string */
	std::string AllDownload;	/* required element of type xsd:string */
	std::string FewDownload;	/* required element of type xsd:string */
	std::string DownloadURL;	/* required element of type xsd:string */
	std::string OS;	/* required element of type xsd:string */
public:
	int soap_type() const { return 13; } /* = unique id SOAP_TYPE__MPC__npRequestResponse */
};
#endif

#ifndef SOAP_TYPE_MPC__npRequest
#define SOAP_TYPE_MPC__npRequest (19)
/* MPC:npRequest */
struct MPC__npRequest
{
public:
	struct _MPC__npRequestRequest r_input;	/* required element of type MPC:npRequestRequest */
public:
	int soap_type() const { return 19; } /* = unique id SOAP_TYPE_MPC__npRequest */
};
#endif

#ifndef SOAP_TYPE_MPC__flashReguestResponse
#define SOAP_TYPE_MPC__flashReguestResponse (23)
/* MPC:flashReguestResponse */
struct MPC__flashReguestResponse
{
public:
	long count;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
public:
	int soap_type() const { return 23; } /* = unique id SOAP_TYPE_MPC__flashReguestResponse */
};
#endif

#ifndef SOAP_TYPE_MPC__flashReguest
#define SOAP_TYPE_MPC__flashReguest (24)
/* MPC:flashReguest */
struct MPC__flashReguest
{
public:
	long start_input;	/* required element of type xsd:long */
	struct _MPC__npRequestResponse *pReq;	/* optional element of type PMPC:npRequestResponse */
public:
	int soap_type() const { return 24; } /* = unique id SOAP_TYPE_MPC__flashReguest */
};
#endif

#ifndef SOAP_TYPE_MPC__typeRequest
#define SOAP_TYPE_MPC__typeRequest (26)
/* MPC:typeRequest */
struct MPC__typeRequest
{
public:
	long type;	/* required element of type xsd:long */
	long order;	/* required element of type xsd:long */
public:
	int soap_type() const { return 26; } /* = unique id SOAP_TYPE_MPC__typeRequest */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (27)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 27; } /* = unique id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (28)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 28; } /* = unique id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (30)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 30; } /* = unique id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (33)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 33; } /* = unique id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (34)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 34; } /* = unique id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (8)
typedef std::string xsd__string;
#endif

#ifndef SOAP_TYPE_MPC__npRequestRequest
#define SOAP_TYPE_MPC__npRequestRequest (10)
typedef struct _MPC__npRequestRequest MPC__npRequestRequest;
#endif

#ifndef SOAP_TYPE_PMPC__npRequestRequest
#define SOAP_TYPE_PMPC__npRequestRequest (12)
typedef struct _MPC__npRequestRequest *PMPC__npRequestRequest;
#endif

#ifndef SOAP_TYPE_MPC__npRequestResponse
#define SOAP_TYPE_MPC__npRequestResponse (14)
typedef struct _MPC__npRequestResponse MPC__npRequestResponse;
#endif

#ifndef SOAP_TYPE_PMPC__npRequestResponse
#define SOAP_TYPE_PMPC__npRequestResponse (16)
typedef struct _MPC__npRequestResponse *PMPC__npRequestResponse;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 MPC__npRequest(struct soap*, struct _MPC__npRequestRequest r_input, struct _MPC__npRequestResponse &r_output);

SOAP_FMAC5 int SOAP_FMAC6 MPC__flashReguest(struct soap*, long start_input, struct _MPC__npRequestResponse *pReq, long &count);

SOAP_FMAC5 int SOAP_FMAC6 MPC__typeRequest(struct soap*, long type, long order, struct _MPC__npRequestResponse &r_output);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_MPC__npRequest(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_MPC__flashReguest(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_MPC__typeRequest(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_MPC__npRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _MPC__npRequestRequest r_input, struct _MPC__npRequestResponse &r_output);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_MPC__flashReguest(struct soap *soap, const char *soap_endpoint, const char *soap_action, long start_input, struct _MPC__npRequestResponse *pReq, long &count);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_MPC__typeRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, long type, long order, struct _MPC__npRequestResponse &r_output);

#endif

/* End of soapStub.h */
